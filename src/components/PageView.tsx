'use client';
import React from 'react';
import Hero from './hero';
import Head from 'next/head';
import Footer from './footer';
import { AnimatePresence, motion } from 'framer-motion';
import { text, curve, translate } from './TransitionLayout';

const routes: any = {
  '/': 'Home',
  '/about': 'About',
  '/contact': 'Contact',
  '/projects': 'projects',
};

const anim = (variants: any) => {
  return {
    variants,
    initial: 'initial',
    animate: 'enter',
    exit: 'exit',
  };
};

export default function Layout({
  children,
  backgroundColor,
  router,
}: any): JSX.Element {
  const [dimensions, setDimensions] = React.useState<any>({
    width: null,
    height: null,
  });
  React.useEffect(() => {
    function resize() {
      setDimensions({
        width: window.innerWidth,
        height: window.innerHeight,
      });
    }
    resize();
    window.addEventListener('resize', resize);
    return () => {
      window.removeEventListener('resize', resize);
    };
  }, []);
  const Style = {
    backgroundColor: backgroundColor,
  };
  return (
    <>
      {/* <!-- Head --> */}
      <Head>
        <title>Portfolio</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      {/* <!-- end of Head --> */}
      <AnimatePresence mode='wait'>
        <div className='page'>
          <div
            style={{ opacity: dimensions.width == null ? 1 : 0 }}
            className='background'
          />
          <motion.p className='route' {...anim(text)}>
            {routes[router.asPath]}
          </motion.p>
          {dimensions.width != null && <SVG {...dimensions} />}

          <Hero />
          {/* <!-- sidebar --> */}
          <aside className='sidebar' id='sidebar'>
            <div>
              <button id='close-btn' className='close-btn'>
                <i className='fas fa-times'></i>
              </button>
            </div>
          </aside>
          {/* <!-- end of sidebar --> */}
          <main style={Style}>{children}</main>
          <Footer />
        </div>
      </AnimatePresence>
    </>
  );
}

const SVG = ({ height, width }: any) => {
  const initialPath = `
      M0 300 
      Q${width / 2} 0 ${width} 300
      L${width} ${height + 300}
      Q${width / 2} ${height + 600} 0 ${height + 300}
      L0 0
  `;

  const targetPath = `
      M0 300
      Q${width / 2} 0 ${width} 300
      L${width} ${height}
      Q${width / 2} ${height} 0 ${height}
      L0 0
  `;

  return (
    <motion.svg {...anim(translate)}>
      <motion.path {...anim(curve(initialPath, targetPath))} />
    </motion.svg>
  );
};
